<!DOCTYPE html>
<html lang="en">
  <%- include('partials/head.ejs') %>

  <body>
    <!-- ======= Header ======= -->
    <%- include('partials/header.ejs') %>

    <!-- ======= Sidebar ======= -->

    <main id="main" class="main">
      <section class="role-secation overflow-auto">
        <div class="container-fluid">
          <div
            class="row justify-content-between align-items-center border-bottom-coustem gap-y25"
          >
            <div class="col-sm-6">
              <div class="pagetitle">
                <h2>
                  <span><i class="fa-solid fa-arrow-left-long"></i></span>
                  Resources View
                  <span class="text-primary" > (<%- role %>)</span>
                </h2>
              </div>
            </div>
            <div class="col-sm-6">
              <div class="dispaly_coustem-type">
                <button
                  onclick="history.back()"
                  type="button"
                  class="button_modal_back"
                  data-bs-toggle="modal"
                  data-bs-target="#staticBackdrop"
                >
                  <span><i class="fa-solid fa-arrow-left"></i></span> Back
                </button>
                <button
                  type="button"
                  id="add_newResources"
                  class="button_modal margin_cous"
                  data-bs-toggle="modal"
                  data-bs-target="#staticBackdrop"
                 
                >
                  Add New Resources
                </button>
              </div>
            </div>
          </div>

          <div class="row mt-3">
            <div class="col-12">
              <table
                class="w-100 table table-striped table-bordered table-hover table-responsive"
              >
                <thead class="table_head">
                  <tr>
                    <th width="110">Sr. No.</th>
                    <th width="300">Resources</th>
                    <th width="700">Actions</th>
                    <th width="300">Change</th>
                  </tr>
                </thead>
                <tbody class="table-body">
                  <% if (!resources || resources.length===0) { %> <% } else { %>
                  <% var counter=1; %> <% resources.forEach(data=> { %> <%
                  data.resources.forEach(resource=> { %>
                  <tr>
                    <td><%= counter++ %></td>
                    <td><%= resource.name.toLowerCase() %></td>
                    <td>
                      <% if (Array.isArray(resource.actions)) { const
                      uniqueActions = [...new Set(resource.actions)];
                      actionsString = uniqueActions.join(", "); %> <%=
                      actionsString %> <% } else { %> <% } %>
                    </td>
                    <td>
                      <button
                        class="edit-btn-list"
                        id="editBtn2"
                        type="button"
                        data-bs-toggle="modal"
                        data-bs-target="#staticBackdrope"
                        onclick="editRole('<%= resource.name %>', '<%= data.role_name %>', '<%= JSON.stringify(resource.actions.map(String)) %>','<%= resource._id %>')"
                      >
                        Edit
                      </button>
                    </td>
                  </tr>
                  <% }); %> <% }); %> <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </section>
    </main>

    <a
      href="#"
      class="back-to-top d-flex align-items-center justify-content-center"
      ><i class="fa-solid fa-arrow-up"></i
    ></a>

    <!-- JS Files -->
    <script src="framework/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="framework/bootstrap/js/jquery.min.js"></script>
    <script src="framework/bootstrap/js/select2.min.js"></script>
    <script src="framework/js/main.js"></script>

    <!-- Modal -->
    <div
      class="modal fade coustem-modal"
      id="staticBackdrop"
      data-bs-backdrop="static"
      data-bs-keyboard="false"
      tabindex="-1"
      aria-labelledby="staticBackdropLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h3 class="modal-title fs-5 text-primary" id="exampleModalLabel">
              Add New Rosources
            </h3>
          </div>
          <div class="modal-body modal_seclect">
            <form action="">
              <div class="mb-3">
                <label for="rosources" class="mb-2 heading_lable"
                  >Rosources Name :</label
                >
                <select
                  id="role_input"
                  name="role"
                  class="form-select form-control"
                >
                  <option value="" selected="">Select</option>
                  <% newresourceslist.forEach(data=> { %>
                  <option
                    value="<%= data.resources.toLowerCase() %>"
                  >
                    <%= data.resources.toLowerCase() %>
                  </option>
                  <% }); %>
                </select>

                <input
                  type="hidden"
                  id="role_Name"
                  class="form-control mx-sm-3"
                  name="role"
                />
              </div>
              <div class="position-relative">
                <label
                  for="multiple-select-field"
                  class="mb-2 fs-18 fw-500 text-secondary"
                  >Actions :</label
                >
                <select
                  class="form-select form-control multipale_option"
                  id="multiple-select-field"
                  data-placeholder="Select"
                  multiple
                >
                <option value="" disabled>Select</option>
                <% action.forEach(data=> { %>
                <option value="<%= data.action %>"><%= data.action %></option>
                <% } ); %>
              </select>
                </select>
                <i class="fas fa-chevron-down dropdown-icon"></i>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button id="add_btn" type="submit" class="button_modal_success">Add</button>
            <button type="button" class="btn_close" data-bs-dismiss="modal">
              Close
            </button>
          </div>
        </div>
      </div>
    </div>
    <!-- modal -->
  
    <!-- modal2 -->
  </body>

  <script>
      $(document).ready(function () {
        $("#multiple-select-field").select2({
          theme: "bootstrap-5",
          width: "100%",
          placeholder: $("#multiple-select-field").data("placeholder"),
          closeOnSelect: false
        });
      });
  </script>
  
 
  <!-- add resources -->
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const addBtn = document.querySelector("#add_btn");
      if (addBtn) {
        addBtn.addEventListener("click", handleAddBtn1);
      }
  
      async function handleAddBtn1() {
        const roleInput = document.querySelector("#role_input");
        const resourcesName = roleInput ? roleInput.value : null; 
  
        const urlParams = new URLSearchParams(window.location.search);
        const roleName = urlParams.get("role"); 
  
        const selectedOptions = [
          ...document.querySelector("#multiple-select-field").selectedOptions
        ];
        const selectedResources = selectedOptions.map(option => option.value); 
  
        // Validation
        if (!resourcesName || selectedResources.length === 0) {
          alert("Please select a resource name and at least one action.");
          return;
        }
  
        try {
          // Send the POST request
          const response = await fetch("/recourcesadd", {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              role_name: roleName,
              resources: [
                {
                  name: resourcesName,
                  actions: selectedResources
                }
              ]
            })
          });
  
          
          if (response.ok) {
            window.location.reload(); 
          } else {
            const errorMessage = await response.text();
            console.error("Error:", errorMessage);
            alert("Failed to add the resource. Please try again.");
          }
        } catch (error) {
          console.error("Error:", error);
          alert("An error occurred while adding the resource. Please try again.");
        }
      }
    });
  </script>


<!-- Modal 2 -->
<div class="modal fade" id="staticBackdrope" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h3 class="modal-title fs-5 text-primary" id="exampleModalLabel">Edit Resources</h3>
      </div>
      <div class="modal-body modal_seclect">
        <form id="resourceForm">
          <div class="form-main">
            <div class="form-group mb-4">
              <label for="fname" class="mb-2 form_heading">Resources Name:</label>
              <input type="text" id="role_input1" class="form-control input_flid" name="role" disabled />
              <input type="hidden" id="roleId" class="form-control mx-sm-3" name="roleid" disabled />
            </div>
            <div class="position-relative">
              <label for="multiple-select-fieldw" class="mb-2 fs-18 fw-500 text-secondary">Actions:</label>
              <select class="form-select form-control multipale_option label ui selection fluid dropdown multiple" id="multiple-select-fieldw" data-placeholder="Select" multiple>
                <option value="" disabled>Select actions</option>
              </select>
              <i class="fas fa-chevron-down dropdown-icon"></i>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button id="add_btn1" type="button" class="button_modal_success" disabled>Submit</button>
        <button type="button" class="btn_close" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>




<script>
  // Initialize Select2 for dropdown
function initializeSelect2() {
  $("#multiple-select-fieldw").select2({
    theme: "bootstrap-5",
    width: "100%",
    placeholder: "Select actions",
    closeOnSelect: false,
  });
}

// Fetch available actions and populate dropdown
async function fetchActionsAndPopulate() {
  try {
    const response = await fetch("/getActions"); // Replace with your API endpoint
    if (response.ok) {
      const actions = await response.json();
      const select = document.getElementById("multiple-select-fieldw");

      // Clear existing options
      select.innerHTML = '<option value="" disabled>Select actions</option>';

      // Populate dropdown
      actions.forEach((action) => {
        const option = document.createElement("option");
        option.value = action;
        option.textContent = action;
        select.appendChild(option);
      });

      initializeSelect2(); // Initialize Select2 after options are populated
    } else {
      console.error("Failed to fetch actions:", response.statusText);
    }
  } catch (error) {
    console.error("Error fetching actions:", error);
  }
}

// Populate dropdown with pre-selected resources for editing
function editRole(resourceName, id, resources, _id) {
  const select = document.getElementById("multiple-select-fieldw");
  let resourceArray = [];

  // Parse resources safely
  try {
    resourceArray = JSON.parse(resources);
  } catch (error) {
    console.error("Error parsing resources:", error);
  }

  // Set resource ID and name
  document.getElementById("roleId").value = id;
  document.getElementById("role_input1").value = resourceName;

  // Clear existing options
  select.innerHTML = '<option value="" disabled>Select actions</option>';

  // Populate dropdown with pre-selected options
  resourceArray.forEach((action) => {
    const option = document.createElement("option");
    option.value = action;
    option.textContent = action;
    option.selected = true; // Mark as selected
    select.appendChild(option);
  });

  window.editId = _id;

  initializeSelect2(); // Reinitialize Select2

  // Enable submit button on selection change
  document.getElementById("add_btn1").disabled = true;
  select.addEventListener("change", () => {
    document.getElementById("add_btn1").disabled = false;
  });
}

// Handle Add Button click
async function handleAddBtnClick() {
  const select = document.getElementById("multiple-select-fieldw");
  const selectedValues = Array.from(select.selectedOptions).map(
    (option) => option.value
  );
  
  const roleName = document.getElementById("roleId").value;
  const resourceName = document.getElementById("role_input1").value;

  try {
    const response = await fetch(`/editresources?role=${roleName}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        resources: {
          _id: window.editId,
          name: resourceName,
          actions: selectedValues,
        },
      }),
    });

    if (response.ok) {
      window.location.reload(); // Reload page on success
    } else {
      console.error("Failed to update resource:", response.statusText);
    }
  } catch (error) {
    console.error("Error updating resource:", error);
  }
}

// Attach event listeners
document.getElementById("add_btn1").addEventListener("click", handleAddBtnClick);

// Fetch actions and populate dropdown on page load
fetchActionsAndPopulate();

</script>


</html>
